===
simple
===

a: {
    foo?: int
    bar?: string
		_hidden: string
		a: b: c: string
}

---

(source_file
    (field (label (identifier)) (value (struct_lit
        (field (label (identifier)) (value (int_type)))
        (field (label (identifier)) (value (string_type)))
        (field (label (identifier)) (value (string_type)))
        (field (label (identifier)) (label (identifier)) (label (identifier)) (value (string_type)))))))

===
closed
===

a: close({
    field: int
})


b: a & {
    field: 3
}

---

(source_file
    (field (label (identifier)) (value (call_expression (builtin)
        (arguments (argument
            (struct_lit
                (field (label (identifier)) (value (int_type)))))))))
    (field (label (identifier)) (value (binary_expression (identifier)
        (struct_lit
            (field (label (identifier)) (value (int_lit))))))))

===
bulk
===

a: {
		foo: string
		["^i"]: bool
		...string
}

---

(source_file
    (field (label (identifier)) (value (struct_lit
        (field (label (identifier)) (value (string_type)))
        (field (label (optional (simple_string_lit))) (value (bool_type)))
        (ellipsis) (string_type)))))

===
definition
===

#A: {
    field: int
}

_#B: {
		field: string
}

---

(source_file
    (field (label (identifier)) (value (struct_lit (field (label (identifier)) (value (int_type))))))
    (field (label (identifier)) (value (struct_lit (field (label (identifier)) (value (string_type)))))))


===
embedding
===

s1: {
    a: 1
    b: 2
    {
        c: 3
    }
}

---

(source_file
    (field (label (identifier)) (value (struct_lit
        (field (label (identifier)) (value (int_lit)))
        (field (label (identifier)) (value (int_lit)))
        (struct_lit
            (field (label (identifier)) (value (int_lit))))))))

===
dynamic
===

import "list"

a: b: ["x"]
a: c: ["y"]
b: "foo"

s: {
	(b):                        "bar"
	(list.Slice(a.b, 0, 1)[0]): "x"
	(a.c[0]):                   "y"
}

---

(source_file
  (import_declaration
    (import_spec
      (simple_string_lit)))
  (field
    (label
      (identifier))
    (label
      (identifier))
    (value
      (list_lit
        (simple_string_lit))))
  (field
    (label
      (identifier))
    (label
      (identifier))
    (value
      (list_lit
        (simple_string_lit))))
  (field
    (label
      (identifier))
    (value
      (simple_string_lit)))
  (field
    (label
      (identifier))
    (value
      (struct_lit
        (field
          (label
            (dynamic
              (identifier)))
          (value
            (simple_string_lit)))
        (field
          (label
            (dynamic
              (index_expression
                (call_expression
                  (qualified_identifier
                    (package_identifier)
                    (dot)
                    (identifier))
                  (arguments
                    (argument
                      (selector_expression
                        (identifier)
                        (selector
                          (dot)
                          (identifier))))
                    (argument
                      (int_lit))
                    (argument
                      (int_lit))))
                (index
                  (int_lit)))))
          (value
            (simple_string_lit)))
        (field
          (label
            (dynamic
              (index_expression
                (selector_expression
                  (identifier)
                  (selector
                    (dot)
                    (identifier)))
                (index
                  (int_lit)))))
          (value
            (simple_string_lit)))))))
